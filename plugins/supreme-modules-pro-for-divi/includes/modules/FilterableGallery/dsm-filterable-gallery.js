let containers = document.querySelectorAll(".dsm-filterable-gallery-container"); function chunk(e, t) { for (var a = [], i = 0, r = e.length; i < r;)a.push(e.slice(i, i += t)); return a } containers.forEach((e, t) => { let a = e.dataset.use_lightbox, i = e.querySelector(".dsm-filterable-gallery-inner-container"); "on" === a && jQuery(i).magnificPopup({ delegate: ".dsm-filterable-gallery-item", type: "image", tLoading: "Loading image ", gallery: { enabled: !0, navigateByImgClick: !0, preload: [0, 1] }, image: { tError: '<a href="%url%">The image </a> could not be loaded.', titleSrc: function (e) { let t = e.el[0].dataset.lightbox_title, a = e.el[0].dataset.lightbox_caption, i = e.el[0].dataset.lightbox_description, r = ""; return r += void 0 === t || "" === t ? "" : t, r += void 0 === a || "" === a ? "" : "<small class='dsm-filterable-image-caption'>" + a + "</small>", r += void 0 === i || "" === i ? "" : "<small class='dsm-filterableimage-description'>" + i + "</small>" } } }) }), containers.forEach(e => { let t = e.querySelector(".dsm-filterable-gallery-inner-container"), a = e.querySelector(".dsm-gallery-loadmore-container"), i = e.querySelector(".dsm-gallery-number-pagination-container"), r = e.querySelectorAll(".dsm-filterable-gallery-filter-item"), n = Number(e.dataset.per_page), l = "on" === e.dataset.showpagination, s = e.dataset.paginationtype, d = Number(e.dataset.speed), c = new window.Shuffle(t, { itemSelector: ".dsm-filterable-gallery-item", delimiter: ",", speed: d, buffer: 1 }), o = new IntersectionObserver(e => { e[0].intersectionRatio >= .5 && c.update(), e[0].isIntersecting && c.update() }); function g() { let t = Number(e.dataset.totalpages); i.innerHTML = ""; let a = document.createElement("span"); a.classList.add("dsm-gallery-number-pagination"), a.setAttribute("data-pagination", "prev"), a.innerHTML = "Prev", i.appendChild(a), Array(t).fill(0).map((e, t) => { let a = t + 1, r = document.createElement("span"); r.innerHTML = a, r.classList.add("dsm-gallery-number-pagination"), r.setAttribute("data-pagination", a), i.appendChild(r) }); let r = document.createElement("span"); r.classList.add("dsm-gallery-number-pagination"), r.setAttribute("data-pagination", "next"), r.innerHTML = "Next", i.appendChild(r), f() } function u() { let e = Array.from(r).find(e => e.classList.contains("dsm-active-filter")); return e && e.hasAttribute("data-category") && "undefined" !== e.dataset.category ? e.dataset.category : "all" } function p(t) { let a = e.querySelectorAll(".dsm-filterable-gallery-item"), i = Array.from(a).filter(e => e.dataset.groups.split(",").includes(t)), r = l ? n : i.length, s = chunk(i, r); a.forEach(e => { e.setAttribute("data-inpage", "-1") }), s.forEach((e, t) => { let a = t + 1; e.forEach(e => { e.setAttribute("data-inpage", a.toString()) }) }), e.setAttribute("data-totalPages", s.length); let d = e.querySelectorAll(".dsm-filterable-gallery-item"), c = Array.from(d).filter(a => { let i = Number(a.dataset.inpage), r = a.dataset.groups.split(",").includes(t), n = Number(e.dataset.currentpage) + 1; return i === n && r }), o = Array.from(d).filter(a => { let i = Number(a.dataset.inpage), r = a.dataset.groups.split(",").includes(t), n = Number(e.dataset.currentpage) - 1; return i === n && r }), g = c.length > 0, u = o.length > 0; e.setAttribute("data-hasnextpage", String(g)), e.setAttribute("data-hasPrevpage", String(u)) } function m() { let t = Number(e.dataset.currentpage), a = t + 1, i = u(); e.setAttribute("data-currentpage", a.toString()), p(i), y(i, a) } function f() { if (!i) return; let t = i.querySelectorAll(".dsm-gallery-number-pagination"), a = Number(e.dataset.currentpage) > 1, r = "true" === e.dataset.hasnextpage; t.forEach(i => { isNaN(i.dataset.pagination) || r || a || (i.style.display = "none"), Number(e.dataset.currentpage) === Number(i.dataset.pagination) && i.classList.add("dsm-active-pagination-item"), i.addEventListener("click", () => { r = "true" === e.dataset.hasnextpage, t.forEach(e => e.classList.remove("dsm-active-pagination-item")); let n = Number(e.dataset.currentpage), l = i.dataset.pagination, s = u(); switch (a = n > 1, l) { case "next": { if (!r) return; let d = n + 1; t.forEach(e => { let t = e.dataset.pagination; d === Number(t) && e.classList.add("dsm-active-pagination-item") }), e.setAttribute("data-currentpage", d), y(s, d) } break; case "prev": { if (!a) return; let c = n - 1; t.forEach(e => { let t = e.dataset.pagination; c === Number(t) && e.classList.add("dsm-active-pagination-item") }), e.setAttribute("data-currentpage", c), y(s, c) } break; default: i.classList.add("dsm-active-pagination-item"), e.setAttribute("data-currentpage", l), y(s, Number(l)) } }) }) } function b() { e.setAttribute("data-currentpage", "1") } function h(e) { r.forEach(t => { let a = t.dataset.category; e === a ? t.classList.add("dsm-active-filter") : t.classList.remove("dsm-active-filter") }) } function y(t, a = e.dataset.currentpage) { a = Number(e.dataset.currentpage), c.filter(e => { let i = Number(e.dataset.inpage), r = e.dataset.groups, n = ("number" === s ? i === a : i <= a) && -1 !== i, l = r.split(",").includes(t); return l && n }), h(t), p(t) } o.observe(t), r.forEach(e => { e.addEventListener("click", () => { let t = e.dataset.category; p(t), b(), y(t), i && g() }) }), a && a.addEventListener("click", () => m()); let v = r[0].dataset.category; p(v), y(v), f() });